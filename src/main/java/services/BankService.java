
package services;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "bank_service", targetNamespace = "http://service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface BankService {


    /**
     * 
     * @param arg1
     * @param montant
     * @return
     *     returns double
     * @throws NotFoundExepetion_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "convUsdToAny", targetNamespace = "http://service/", className = "services.ConvUsdToAny")
    @ResponseWrapper(localName = "convUsdToAnyResponse", targetNamespace = "http://service/", className = "services.ConvUsdToAnyResponse")
    @Action(input = "http://service/bank_service/convUsdToAnyRequest", output = "http://service/bank_service/convUsdToAnyResponse", fault = {
        @FaultAction(className = NotFoundExepetion_Exception.class, value = "http://service/bank_service/convUsdToAny/Fault/NotFoundExepetion")
    })
    public double convUsdToAny(
        @WebParam(name = "montant", targetNamespace = "")
        double montant,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws NotFoundExepetion_Exception
    ;

    /**
     * 
     * @param arg1
     * @param montant
     * @return
     *     returns double
     * @throws NotFoundExepetion_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "convTndToAny", targetNamespace = "http://service/", className = "services.ConvTndToAny")
    @ResponseWrapper(localName = "convTndToAnyResponse", targetNamespace = "http://service/", className = "services.ConvTndToAnyResponse")
    @Action(input = "http://service/bank_service/convTndToAnyRequest", output = "http://service/bank_service/convTndToAnyResponse", fault = {
        @FaultAction(className = NotFoundExepetion_Exception.class, value = "http://service/bank_service/convTndToAny/Fault/NotFoundExepetion")
    })
    public double convTndToAny(
        @WebParam(name = "montant", targetNamespace = "")
        double montant,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws NotFoundExepetion_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns services.CompteEntite
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getCompte", targetNamespace = "http://service/", className = "services.GetCompte")
    @ResponseWrapper(localName = "getCompteResponse", targetNamespace = "http://service/", className = "services.GetCompteResponse")
    @Action(input = "http://service/bank_service/getCompteRequest", output = "http://service/bank_service/getCompteResponse")
    public CompteEntite getCompte(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @return
     *     returns java.util.List<services.CompteEntite>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getComptes", targetNamespace = "http://service/", className = "services.GetComptes")
    @ResponseWrapper(localName = "getComptesResponse", targetNamespace = "http://service/", className = "services.GetComptesResponse")
    @Action(input = "http://service/bank_service/getComptesRequest", output = "http://service/bank_service/getComptesResponse")
    public List<CompteEntite> getComptes();

    /**
     * 
     * @param montant
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "convEuroToTnd", targetNamespace = "http://service/", className = "services.ConvEuroToTnd")
    @ResponseWrapper(localName = "convEuroToTndResponse", targetNamespace = "http://service/", className = "services.ConvEuroToTndResponse")
    @Action(input = "http://service/bank_service/convEuroToTndRequest", output = "http://service/bank_service/convEuroToTndResponse")
    public double convEuroToTnd(
        @WebParam(name = "montant", targetNamespace = "")
        double montant);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAllCurrency", targetNamespace = "http://service/", className = "services.GetAllCurrency")
    @ResponseWrapper(localName = "getAllCurrencyResponse", targetNamespace = "http://service/", className = "services.GetAllCurrencyResponse")
    @Action(input = "http://service/bank_service/getAllCurrencyRequest", output = "http://service/bank_service/getAllCurrencyResponse")
    public List<String> getAllCurrency();

}
